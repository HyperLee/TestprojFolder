@page
@model BNICalculate.Pages.PomodoroModel
@{
    ViewData["Title"] = "番茄鐘計時器";
}

<!-- T036: 引入 pomodoro.css -->
<link rel="stylesheet" href="~/css/pomodoro.css" asp-append-version="true" />

<div class="text-center">
    <h1 class="display-4">番茄鐘計時器</h1>
    <p>使用番茄工作法提升專注力和生產力</p>
</div>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- T024: 計時器顯示區域（MM:SS 格式、時段類型標籤） -->
            <div id="timer-display" class="text-center mb-4">
                <h1 id="timer-text" class="display-1 fw-bold">25:00</h1>
                <p id="session-type" class="lead">準備開始工作</p>
            </div>
            
            <!-- T025: 控制按鈕區（開始工作按鈕、HTML 結構） -->
            <div id="timer-controls" class="text-center mt-4">
                <button id="start-work-btn" class="btn btn-primary btn-lg">開始工作</button>
                <button id="pause-btn" class="btn btn-warning btn-lg" style="display:none;">暫停</button>
                <button id="resume-btn" class="btn btn-success btn-lg" style="display:none;">繼續</button>
                <button id="reset-btn" class="btn btn-secondary btn-lg" style="display:none;">重置</button>
            </div>
            
            <!-- T026: Bootstrap Toast 通知容器（橫幅訊息 HTML） -->
            <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
                <div id="notification-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto">番茄鐘通知</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body" id="toast-message">
                        通知訊息
                    </div>
                </div>
            </div>
            
            <!-- 統計顯示區域 -->
            <div id="stats-display" class="mt-5 text-center">
                <h4>今日完成</h4>
                <p class="lead">番茄鐘數量：<span id="pomodoro-count" class="badge bg-success fs-4">@Model.Statistics.CompletedPomodoroCount</span></p>
            </div>
        </div>
    </div>
</div>

<!-- 隱藏欄位：傳遞設定給 JavaScript -->
<input type="hidden" id="work-duration" value="@Model.Settings.WorkDurationMinutes" />
<input type="hidden" id="break-duration" value="@Model.Settings.BreakDurationMinutes" />

@section Scripts {
    <script src="~/js/pomodoro.js"></script>
    <script>
        // T029: 綁定開始按鈕事件監聽器
        // T030: UI 更新邏輯（onTick 更新顯示、onComplete 顯示通知）
        document.addEventListener('DOMContentLoaded', function() {
            const workDuration = parseInt(document.getElementById('work-duration').value);
            const breakDuration = parseInt(document.getElementById('break-duration').value);
            
            // T027: 實作 showNotification() 函式（Bootstrap Toast 顯示、4 秒自動消失）
            window.showNotification = function(message, type = 'info') {
                const toastEl = document.getElementById('notification-toast');
                const toastBody = document.getElementById('toast-message');
                const toast = new bootstrap.Toast(toastEl, { delay: 4000 });
                
                toastBody.textContent = message;
                
                // 設定背景顏色
                toastEl.className = 'toast';
                if (type === 'success') toastEl.classList.add('bg-success', 'text-white');
                else if (type === 'info') toastEl.classList.add('bg-info', 'text-white');
                else if (type === 'warning') toastEl.classList.add('bg-warning');
                else if (type === 'danger') toastEl.classList.add('bg-danger', 'text-white');
                
                toast.show();
            };
            
            // 建立計時器實例
            const timer = new PomodoroTimer({
                workDuration: workDuration,
                breakDuration: breakDuration,
                onTick: function(remainingSeconds) {
                    // T030: onTick 更新顯示
                    document.getElementById('timer-text').textContent = formatTime(remainingSeconds);
                },
                onWorkComplete: function() {
                    // T030: onComplete 顯示通知
                    showNotification('工作時段完成！進入休息時段', 'success');
                    document.getElementById('session-type').textContent = '休息時間';
                    timer.startBreak();
                },
                onBreakComplete: function() {
                    showNotification('休息完成！番茄鐘 +1', 'info');
                    document.getElementById('session-type').textContent = '準備開始工作';
                    
                    // 更新番茄鐘計數（客戶端）
                    const countEl = document.getElementById('pomodoro-count');
                    countEl.textContent = parseInt(countEl.textContent) + 1;
                    
                    // 顯示開始按鈕
                    document.getElementById('start-work-btn').style.display = 'inline';
                    document.getElementById('pause-btn').style.display = 'none';
                    document.getElementById('resume-btn').style.display = 'none';
                    document.getElementById('reset-btn').style.display = 'none';
                },
                onStateChange: function(state) {
                    // 根據狀態顯示/隱藏按鈕
                    if (state === 'running') {
                        document.getElementById('start-work-btn').style.display = 'none';
                        document.getElementById('pause-btn').style.display = 'inline';
                        document.getElementById('resume-btn').style.display = 'none';
                        document.getElementById('reset-btn').style.display = 'inline';
                    } else if (state === 'paused') {
                        document.getElementById('pause-btn').style.display = 'none';
                        document.getElementById('resume-btn').style.display = 'inline';
                        document.getElementById('reset-btn').style.display = 'inline';
                    } else {
                        document.getElementById('start-work-btn').style.display = 'inline';
                        document.getElementById('pause-btn').style.display = 'none';
                        document.getElementById('resume-btn').style.display = 'none';
                        document.getElementById('reset-btn').style.display = 'none';
                    }
                }
            });
            
            // T029: 綁定開始按鈕事件
            document.getElementById('start-work-btn').addEventListener('click', function() {
                timer.startWork();
                document.getElementById('session-type').textContent = '工作中';
            });
            
            // 綁定暫停按鈕（Phase 4）
            document.getElementById('pause-btn').addEventListener('click', function() {
                timer.pause();
                document.getElementById('session-type').textContent = '已暫停';
            });
            
            // 綁定繼續按鈕（Phase 4）
            document.getElementById('resume-btn').addEventListener('click', function() {
                timer.resume();
                const sessionText = timer.sessionType === 'work' ? '工作中' : '休息時間';
                document.getElementById('session-type').textContent = sessionText;
            });
            
            // 綁定重置按鈕（Phase 4）
            document.getElementById('reset-btn').addEventListener('click', function() {
                if (confirm('確定要重置計時器嗎？')) {
                    timer.reset();
                    document.getElementById('timer-text').textContent = formatTime(workDuration * 60);
                    document.getElementById('session-type').textContent = '準備開始工作';
                }
            });
            
            // T033: 頁面載入時恢復狀態
            const restored = timer.loadState();
            if (restored) {
                showNotification('已恢復計時器狀態', 'info');
                const sessionText = timer.sessionType === 'work' ? '工作中' : '休息時間';
                if (timer.state === 'paused') {
                    document.getElementById('session-type').textContent = '已暫停';
                } else {
                    document.getElementById('session-type').textContent = sessionText;
                }
                document.getElementById('timer-text').textContent = formatTime(timer.remainingSeconds);
            }
        });
        
        // T034: 頁面卸載時儲存狀態
        window.addEventListener('beforeunload', function() {
            // 狀態已在 timer.saveState() 中自動儲存
        });
    </script>
}
